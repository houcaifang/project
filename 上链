<template>
    <div class="upChain">
        <titleInfo :titleInfo="titleMeanObj" @clickEvent="clickEvent" @search="search"></titleInfo>
        <!--表格-->
        <el-table
                border
                ref="multipleTable"
                :data="tableData"
                tooltip-effect="dark"
                @selection-change="handleSelectionChange">
            <el-table-column
                    props="id"
                    type="selection"
                    :selectable="isChecked"
                    align="center">
            </el-table-column>
            <el-table-column label="缩略图" width="90px" align="center">
                <template slot-scope="scope">
                    <img v-if="scope.row.file_img != ''" :src="scope.row.file_img" style="width: 70px;height: 70px;object-fit:cover" alt="">
                    <img v-if="scope.row.file_img == ''" src="../../../assets/placeholder.png" width="70" height="70" alt="">
                </template>
            </el-table-column>
            <el-table-column
                    prop="file_name"
                    label="图片名称"
                    align="left"
                    show-overflow-tooltip>
            </el-table-column>
            <el-table-column
                    prop="file_type"
                    label="图片格式"
                    align="center">
            </el-table-column>
            <el-table-column
                    prop="file_size"
                    label="文件大小"
                    align="center">
            </el-table-column>
            <el-table-column
                    label="上链状态"
                    align="center">
                    <template slot-scope="scope">

                        <el-popover
                            placement="top-start"
                            width="200"
                            trigger="hover"
                            :content="scope.row.status == 0 ? '已申请' : scope.row.status == 1 ? '未支付' : scope.row.status===2 ? '处理中' : scope.row.status===3 ? '上链成功' : scope.row.status===4 ? '上链失败' : ''">
                            <el-button  v-if="scope.row.status===0" slot="reference" style="border:0px;position:relative;top:5px;background:none" >
                                <i class="iconfont icon-time" style="font-size: 22px;font-weight: bold"></i>
                            </el-button>
                            <el-button  v-if="scope.row.status===1" slot="reference" style="border:0px;position:relative;top:5px;background:none" >
                                <i class="iconfont icon-time" style="font-size: 22px;font-weight: bold"></i>
                            </el-button>
                            
                            <el-button v-if="scope.row.status == 3" slot="reference" style="border:0px;position:relative;top:5px;background:none" >
                                <i class="iconfont icon-complete-1" style="color: #22FF37;font-size: 22px;font-weight: bold"> </i>
                            </el-button>     
                            <el-button  v-if="scope.row.status===4" slot="reference" style="border:0px;position:relative;top:5px;background:none" >
                                <i class="iconfont icon-Warning" style="color: #cccccc;font-size: 22px;font-weight: bold"> </i>
                            </el-button>
                        </el-popover>  
                        
                        <!-- const STATUS_NONE = 0;已申请
                        const STATUS_UNPAID = 1;未支付
                        const STATUS_PADDING = 2;处理中
                        const STATUS_SUCCESS = 3;成功
                        const STATUS_FAILED = 4; 失败-->
                    </template>                    
            </el-table-column>
            <el-table-column
                prop="orderStatus"
                label="订单状态"
                align="center"
                width="100">
                <template slot-scope="scope">
                    <el-button :disabled="scope.row.orderStatus == 1 ? false : true" @click="newPayOrder(scope.row.orderId)" type="text">{{scope.row.orderStatus == 0 ? '未支付' : scope.row.orderStatus == 1 ? '未支付' : scope.row.orderStatus == 2 ? '处理中' : scope.row.orderStatus == 3 ? '已支付' : scope.row.orderStatus == 4 ? '失败' : ''}}</el-button>
                </template>
            </el-table-column>
            <el-table-column
                    prop="created_at"
                    label="上链时间"
                    align="center">
            </el-table-column>
            <el-table-column
                    prop="desc"
                    label="备注"
                    align="left"
                    show-overflow-tooltip>
            </el-table-column>
            <el-table-column
                    prop="photo_hash"
                    label="操作"
                    width="250"
                    align="center">
                     <template slot-scope="scope">
                        <el-button :disabled="scope.row.hash_value == ''" type="text" size="small" @click="gotoChainDetails(scope.row.txid)">
                            <i class="iconfont icon-look"></i><span class="detailsText">查看</span>
                        </el-button>
                        <el-button type="text" size="small" @click="watermark(scope.row.photoId)" >
                            <i class="iconfont icon-lock"></i><span class="detailsText">加密</span>
                        </el-button>
                        <el-button type="text" size="small" @click="startMonitoring(scope.row.photoId,scope.row.name)" >
                            <i class="iconfont icon-scanning"></i><span class="deleteText">监测</span>
                        </el-button>
                    </template>
            </el-table-column>

        </el-table>
        <!--操作-->
        <div class="subBtn">
            <el-row>
                <el-col :span="12">
                    <div class="grid-content bg-purple">
                        <el-checkbox v-model="checked"></el-checkbox>
                        <el-button type="primary" style="margin-left: 10px" @click="watermarkAll" >批量加密</el-button>
                    </div>
                </el-col>
                <el-col :span="12">
                    <!--分页-->
                    <paging  :pagination="pagination" @handleCurrentChange="currentPage"></paging>
                </el-col>
            </el-row>
        </div>

        <!--dialog-->
        <el-dialog :visible.sync="dialogTableVisible" width="772px" class="dialog1">
            <div style="min-height: 430px">
                <div v-show="checkBtn" style="padding-top: 120px">
                    <el-button type="primary" class="bigBtn"
                               @click="isShowNewUpload">
                        新上传图片
                    </el-button>
                    <br><br>
                    <el-button type="primary"  class="bigBtn"
                               @click="isShowCheckPicture">
                        从图片库选择
                    </el-button>
                </div>
                <!--  本地选择弹出框  -->
                <div v-if="newUpload">
                   <el-row :gutter="10">
                    <el-col :span="4">
                        <div style="text-align: right;margin-top: 10px">选择相册：</div>
                    </el-col>
                    <el-col :span="20" style="display:flex">
                        <div>
                           <el-select v-model="selectAlbum" placeholder="请选择">
                            <el-option
                                    v-for="item in picList"
                                    :key="item.id"
                                    :label="item.name"
                                    :value="item.id">
                            </el-option>
                        </el-select>
                        </div>
                    </el-col>
                    <el-col :span="4">
                        <div style="text-align: right;margin-top: 20px">选择图片：</div>
                    </el-col>
                    <el-col :span="20">
                        <div class="uploadBox">
                            <input :id="id" type="file" class="inputFile" @change="preview" />
                            <i class="iconfont icon-add addIcon"></i>
                        </div>
                        <div  class="uploadBox" v-if="isShowPreviewImg">
                            <img :src="previewImgUrl" alt="">
                        </div>
                    </el-col>
                    <el-col :span="4"></el-col>
                    <el-col :span="20">
                        <div style="margin-top: 20px;margin-left: 114px">
                            <el-button type="primary" @click="uploadPhoto">上传</el-button>
                        </div>
                    </el-col>
                </el-row>
                </div>
                <!--  图库选择弹出框  -->
                <div v-if="checkPicture" class="picDialog" style="text-align: left">
                     <el-form :inline="true" :model="formInline" class="demo-form-inline" style="margin-bottom:0px">
                        <el-form-item label="选择相册：">
                            <el-select v-model="formInline.region" placeholder="请选择"  >
                                <el-option v-for="(item,index) in picList" :key="index" :label="item.name" :value="item.id"></el-option>
                            </el-select>
                        </el-form-item>
                        <el-form-item label="">
                            <el-input v-model="formInline.keyword" placeholder="输入作品标题或说明" prefix-icon="el-icon-search"></el-input>
                        </el-form-item>
                            <el-button type="primary" style="position:relative;top:2px" @click="searchPic">搜索</el-button>
                    </el-form>
                    <div class="popTableBorder" style='height:340px;overflow-y:scroll;'>
                        <ul class="picList" style="margin-top:20px;margin-bottom:20px">
                            <li v-for="(item,index) in photoList" :key="index" @click="getPicid(item.url,item.title,index,item.id)">
                                <img :src="item.url+'?x-oss-process=style/photo_128'" alt="选择证据图片">
                                <div class="picTitle">{{item.title}}</div>
                                <div class="imgBg" :data="item.url" v-show="picOpacity == true && index == picIndex"></div>
                                <div class="imgIcon" :data="item.url" v-show="picOpacity == true && index == picIndex">
                                    <el-button type="success" icon="el-icon-check" circle></el-button>
                                </div>
                            </li>
                        </ul>
                    </div>
                    <div class="picPage">
                        <el-pagination
                            @current-change="handleCurrentChanges"
                            :current-page="current_pages"
                            :page-size="per_page"
                            small
                            background
                            layout="prev, pager, next"
                            :total="total">
                        </el-pagination>
                    </div>
                    <div class="" style="text-align:right">
                        <el-button type="text" @click="resetThis" >取消</el-button>
                        <el-button type="primary" @click="picSubmit" >确认选择</el-button>
                    </div>
                </div>

                <!--  支付 弹出框   -->
                <div class="payBox" v-if="userPay">
                    <div class="payTitle">确认付款</div>
                    <div class="payNumber">¥ {{order.total}}</div>
                    <table class="payTable">
                        <tr>
                            <td class="tableLeft">订单金额：</td>
                            <td>¥ {{order.total}}</td>
                        </tr>
                        <tr>
                            <td class="tableLeft">订单号：</td>
                            <td>{{order.no}}</td>
                        </tr>
                        <tr>
                            <td class="tableLeft">账户余额：</td>
                            <td><span>{{sum}}</span></td>
                        </tr>
                        <tr>
                            <td class="tableLeft">产品名称：</td>
                            <td>{{isUpwarter == 1 ? '图片加密' : '图片上链'}}</td>
                        </tr>
                    </table>
                    <el-row style="margin-top: 30px">
                        <el-col :span="12">
                            <div class="grid-content" style="text-align: right;margin-right: 16px">
                                <el-button :type="sum > order.total ? 'primary' : 'disabled'" :disabled="sum < order.total ? true : false" @click="gotoPay(order.id)" >确认提交</el-button>
                            </div>
                        </el-col>
                        <el-col :span="12">
                            <div class="grid-content" style="text-align: left;margin-left: 16px">
                                <el-button type="primary" @click="gotoRecharge">去充值</el-button>
                            </div>
                        </el-col>
                    </el-row>
                </div>

            </div>
        </el-dialog>
    </div>
</template>

<script>
    import titleInfo from '@/./components/Title'
    import paging from '@/./components/Paging'
    export default {
        name: "UpChain",
        data(){
            return{
                userId:sessionStorage.getItem("userId"),//获取userid
                token:localStorage.getItem("token") ? localStorage.getItem("token") : sessionStorage.getItem("token"), //获取token
                /*子组件数据*/
                titleMeanObj:{
                    topTitle: '上链',
                    btnText: '新建上链',
                    starDate: '', //开始时间
                    endDate: '', //结束时间
                    searchVal: '', //搜索内容
                    /*select list*/
                    options: [
                        {
                            value: '选项1',
                            label: '黄金糕'
                        },
                    ],
                    value: '',
                },
                /*table data*/
                tableData: [],
                checkId:'',//复选框选择状态
                multipleSelection: [],
                checked: false,
                dialogTableVisible: false,
                checkBtn: true,
                newUpload: false,
                checkPicture: false,
                checkedList: [], //加密内容的list
                checkList: ['姓名', '作品编号', '手机号', '邮编'], //加密内容的list
                encryptionContent: '',
                checkedPicture: false, //是否选择的加密图片
                pictureName: '', //图片名称
                pictureNote: '', //图片备注
                fileList2: [],
                pagination: [], //分页的list
                indexPage: '',//当前页
                headerToken: localStorage.getItem('token')?localStorage.getItem('token'):sessionStorage.getItem('token'),

                //选择本地图片
                selectAlbum: '', //选择相册
                photoOptions: [],
                isShowPreviewImg: false, //是否显示预览图片
                id: 'upload',
                region: 'oss-cn-beijing',
                picOSSList:'',//oss上传之后返回的参数
                picFileNme:'',//上传的文件名
                photoId:'',

                //图片需要的字段
                dialogPicShowList:false,//图片弹出框
                photos:[],//图片列表
                picId:'',//图片Id
                picUrl:'',//一条图片的数据url
                picOpacity:false,//鼠标移入事件
                picIndex:'',//点击图片获取index
                photoList:[],//获取相册列表
                picList:[],//相册列表
                dialogShwo:false,
                modalVisible:false,
                formInline: {  //图片弹出框搜索的字段 
                    user: '',
                    region: '',
                    keyword: '',
                },

                //订单弹出框
                userPay:false,//弹出框事件
                location:'',//订单id
                order:'',//订单内容
                sum:'',//余额
                isUpwarter:0,//判断上链还是加密

                 //弹出框分页
                total: null,
                current_pages: 1,
                per_page: null,
                indexPages: '',//当前页

            }

        },
        watch:{
            checked(newVal,oldVal){
                if(newVal===true){
                    this.$refs.multipleTable.toggleAllSelection(this.tableData3);
                }else if(newVal===false){
                    this.$refs.multipleTable.clearSelection();
                }
            }
        },
        components:{titleInfo,paging},
        mounted(){
            this.getChainList()
            this.getPhotoList()
        },
        methods:{

            handleSelectionChange(val) {
                this.multipleSelection = val
            },

             //弹出框里的分页
            handleCurrentChanges(val){
                this.indexPages = val
                this.getPhotoAlbum()
            },

            //分页方法
            currentPage(val) {
                this.indexPage = val;
                this.getChainList();
            },

            //搜索
            search(){
                this.indexPage = 1
                this.getChainList();
            },

            //查看详情
            gotoChainDetails(id){
                this.$router.push({path:'/index/img-chain-details',query:{id:id}})
            },

            clickEvent() {
                if (this.checkBtn === false) {
                    this.dialogTableVisible = true
                    this.checkBtn = true
                    this.newUpload = false
                    this.checkPicture = false
                    this.userPay = false
                } else {
                    this.dialogTableVisible = true
                }
            },
            isShowNewUpload() {
                this.checkBtn = false
                this.newUpload = true
            },
            isShowCheckPicture() {
                this.checkBtn = false
                this.checkPicture = true
                this.indexPages = 1
                this.getPhotoList();
                this.getPhotoAlbum();
            },
            //图片上传回调
            handlePreview(file){
                console.log(file)
            },

            handleRemove(file, fileList) {
                console.log(file,fileList)
            },

            //获取上链列表//修改
            getChainList(){
                let _this = this
                let params = {
                    page:_this.indexPage,
                    page_size:15
                }
                if(_this.titleMeanObj.starDate){
                    params.begin_at = _this.titleMeanObj.starDate     
                }
                if(_this.titleMeanObj.endDate){
                    params.end_at = _this.titleMeanObj.endDate
                }
                if(_this.titleMeanObj.searchVal){
                    params.keyword = _this.titleMeanObj.searchVal
                }
                let url = `/photo_blockchains?include=photo,result,user,logs,orderItem.order`
                _this.$http.get(url,{
                    params,
                    headers:{
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'Authorization': `Bearer ${_this.token}`
                    }
                }).then(res=>{
                    _this.pagination = [] //分页后刷新列表
                    _this.tableData = []
                    let hash_value = ''
                    for(let i in res.data.data){
                        if(res.data.data[i].result){
                            hash_value = res.data.data[i].photo_hash
                        }
                        let chainObj = {
                            id: res.data.data[i].id,
                            url: res.data.data[i].photo.data.url,
                            desc: res.data.data[i].photo.data.desc,
                            blockchain_status: res.data.data[i].photo.data.blockchain_status,
                            file_name: res.data.data[i].file_name,
                            file_type: res.data.data[i].file_type,
                            file_size: res.data.data[i].file_size,
                            created_at: res.data.data[i].created_at,
                            file_img: res.data.data[i].photo.data.url+'?x-oss-process=style/photo_128',
                            photo_hash: res.data.data[i].photo_hash,
                            status: res.data.data[i].status,
                            hash_value: res.data.data[i].result ? res.data.data[i].result.data.hash_value : '',
                            txid: res.data.data[i].result ? res.data.data[i].result.data.txid : '',
                            photoId: res.data.data[i].photo.data.id,
                            orderStatus: res.data.data[i].orderItem.data.order.data.status,
                            orderId: res.data.data[i].orderItem.data.order.data.id,
                        }
                        _this.tableData.push(chainObj)  
                    }
                    _this.pagination = res.data.meta.pagination
                })
            },

            //图片上链
            blockChain(id){
                let _this = this;
                let params = new URLSearchParams()
                let url = ''
                if(id){
                    url = `/photos/${id}/photo_blockchain`
                } else {
                    url = `/photos/${_this.picId}/photo_blockchain`
                }
                _this.$http.post(url,params,{
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'Authorization': `Bearer ${_this.headerToken}`
                    }
                }).then((res)=>{
                    //订单id
                    _this.location = res.headers.location;
                    _this.getBalance() //获取余额
                    _this.getChainList() //获取列表
                    _this.payOrder() //获取订单
                    _this.checkPicture = false //关闭选择图片弹出框
                    _this.userPay = true //支付弹出框
                }).catch((error)=>{
                    _this.$message.error(error.response.data.message)
                })
            },

            //搜索图片
            searchPic(){
                this.indexPages = 1
                this.getPhotoAlbum();
            },

            //取消选中
            resetThis(){
                this.picTitle = '';
                this.picUrl = '';
                this.picIndex = '';
                this.dialogTableVisible = false //关闭弹出框
                this.$emit("reset")
            },

            //获取图片id
            getPicid(url,title,index,id){
                this.picTitle = title;
                this.picUrl = url;
                this.picId = id;
                this.picIndex = index;
                this.picOpacity = true;
            },

            //确认选择图片
            picSubmit(){ 
                this.picFileNme = ''
                this.blockChain() //图片上链
            },

            //获取相册列表
            getPhotoList(){
                let _this = this;
                let url = `/users/${_this.userId}/galleries`
                _this.$http.get(url,{
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'Authorization': `Bearer ${_this.token}`
                    }
                }).then((res)=>{
                    _this.picList = res.data.data
                    _this.photoOptions = res.data.data
                }).catch((error)=>{
                    console.log(error)
                })
            },

            //获取图片列表
            getPhotoAlbum(){
                let _this = this;
                //清空图片选中事件
                _this.picOpacity = false
                let url = '';
                if(_this.formInline.region != ''){
                    url = `/galleries/${_this.formInline.region}/photos?include=user,gallery&page_size=16&keyword=${_this.formInline.keyword}&page=${_this.indexPages}`;
                } else if(_this.formInline.keyword != '') {
                    url = `/photos?keyword=${_this.formInline.keyword}&page=${_this.indexPages}&page_size=16`; 
                } else {
                    url = `/photos?include=user,gallery&page=${_this.indexPages}&page_size=16`;

                }
                _this.$http.get(url,{
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'Authorization': `Bearer ${_this.token}` 
                    }
                }).then((res)=>{
                    _this.photoOptions = res.data.data;
                    _this.photoList = [];
                    res.data.data.map((i)=>{
                        _this.photoList.push({
                            url:i.url,
                            id:i.id,
                            title:i.title,
                            desc:i.desc
                        })
                        //图片分页
                        _this.per_page = res.data.meta.pagination.per_page
                        _this.total = res.data.meta.pagination.total
                        _this.current_page = res.data.meta.pagination.current_page
                    })
                }).catch((error)=>{
                    console.log(error)
                })
            },

            //证据提取列表
            evidenceExtractList(){
                let _this = this;
                let params = {
                    page:_this.indexPage,
                    keyword:_this.searchVal
                }
                _this.$http.get('/evidence_repository_packages?include=user',{
                    params,
                    headers:{
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'Authorization': 'Bearer '+_this.token
                    }
                }).then((res)=>{
                    _this.tableData = [];
                    _this.pagination = '';
                    res.data.data.map((i)=>{
                        _this.tableData.push({
                            id:i.id,
                            name:i.name,
                            operator_name:i.operator_name,
                            remark:i.remark,
                            share_code:i.share_code,
                            created_at:i.created_at,
                            size:i.size,
                            file_count:i.file_count,
                            avatar:i.user.data.avatar,
                            states:i.states,
                            file_img:i.file_url,
                        })
                    })
                    //分页
                    _this.pagination = res.data.meta.pagination;
                })
            },

            //复选框是否可以勾选
            isChecked(row,index){
                let _this = this
                if(row.id == _this.checkId){
                    return false
                } else {
                    return true
                }
            },

            //icon 水印加密
            watermark(id){
                let _this = this
                let url = `/photos/${id}/watermark`
                let params = new URLSearchParams()
                _this.$http.post(url,params,{
                    headers:{
                         'Content-Type': 'application/x-www-form-urlencoded',
                        'Authorization': `Bearer ${_this.token}`
                    }
                }).then((res)=>{
                    if(res.status===201){
                         _this.location = res.data.order_id
                    } else {
                         _this.location = res.data.data.order_id
                    }
                    _this.isUpwarter = 1
                    _this.payOrder() //请求订单
                }).catch((error)=>{
                    _this.$message.error(error.response.data.message)
                })
            },

            //批量水印加密
            watermarkAll(){
                let _this = this
                let checkLen = _this.multipleSelection.length
                let lenNum = 0
                let params = new URLSearchParams()
                for(let i=0;i<_this.multipleSelection.length;i++){
                    _this.$http.post('/photos/'+_this.multipleSelection[i].id+'/watermark',params,{
                         headers:{
                            'Content-Type': 'application/x-www-form-urlencoded',
                            'Authorization': `Bearer ${_this.headerToken}`
                         }
                    }).then((res)=>{
                        if(res.status===201){
                            if(lenNum++ == checkLen){
                                _this.$message.success('加密成功')
                            } else {
                                 _this.$message.error(error.response.data.message)
                            }
                        }
                    }).catch((error)=>{
                         _this.$message.error(error.response.data.message)
                    })
                }
            },

            //开始监测
            startMonitoring(id,name){
                let _this = this
                let params = new URLSearchParams
                params.append('photo_id',id) //图片id
                params.append('name',name) //监测名称
                _this.$http.post('/monitor_services',params,{
                    headers:{
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'Authorization': `Bearer ${_this.headerToken}`
                    }
                }).then((res)=>{
                    if(res.status===201){
                        _this.$message.success('新建监测成功')
                    }
                }).catch((error)=>{
                     _this.$message.error(error.response.data.message)
                })
                
            },

            //获取上传图片预览url
            getObjectURL(file){
                let url = null;
                if(window.createObjectURL != undefined){
                    url = window.createObjectURL(file);//basic
                }else if(window.URL != undefined){
                    url = window.URL.createObjectURL(file);
                }else if(window.webkitURL != undefined){
                    url = window.webkitURL.createObjectURL(file);
                }
                return url;
            },

            //预览图片
            preview(){
                let _this = this
                let files = document.getElementById(_this.id)
                _this.isShowPreviewImg = true
                //上传之前的预览
                _this.previewImgUrl = _this.getObjectURL(files.files[0])
            },

            //随机文件名字
            randomString(len) {
                len = len || 32;
                let chars = 'ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678';
                let maxPos = chars.length;
                let pwd = '';
                for (let i = 0; i < len; i++) {
                    pwd += chars.charAt(Math.floor(Math.random() * maxPos));
                }
                return pwd;
            },

            //提交oss图片url
            putOssUrl(name,picUrl,id){
                let _this = this
                let url = ''
                if(id){
                    url = `/galleries/${id}/photos`
                } else{
                    url = `/photos`
                }
                let params = new URLSearchParams
                params.append('title',name) //上传文件的文件名
                params.append('url',picUrl)     //oss返回的url
                params.append('is_private','1') //私有的
                params.append('desc',id)  //描述暂时也用文件名
                _this.$http.post(url,params,{
                    headers:{
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'Authorization': `Bearer ${_this.headerToken}`
                    }
                }).then((res)=>{
                    this.blockChain(res.headers.location)
                }).catch((error)=>{
                    _this.$message.success(error)
                })
            },

            //上传图片
            uploadPhoto(){
                let _this = this
                _this.$http.get('/aliyun/oss/photo', {
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'Authorization': `Bearer ${_this.token}`
                    }
                }).then((res)=>{
                    //console.log(res,'-----')
                    let OSS = require('ali-oss')
                    let files = document.getElementById(_this.id)
                    let client = new OSS({
                        region: _this.region,
                        accessKeyId: res.data.AccessKeyId,
                        accessKeySecret: res.data.AccessKeySecret,
                        stsToken: res.data.SecurityToken,
                        bucket: process.env.VUE_APP_OSS_BUCKET_PHOTO
                    });
                    if(files.files) {
                        const fileLen = document.getElementById(_this.id).files
                        //上传之前的预览
                        _this.previewImgUrl = _this.getObjectURL(files.files[0])
                        //const resultUpload = [];
                        for (let i = 0; i < fileLen.length; i++) {
                            let file = fileLen[i]
                            let storeAs = `users/${_this.userId}/${_this.randomString(20)}.${file.name.split('.').pop()}`

                            //storeAs表示上传的object name , file表示上传的文件
                            client.multipartUpload(storeAs, file).then((res)=>{
                                _this.picOSSList = res;
                                _this.putOssUrl(file.name,res.name,_this.selectAlbum)
                                _this.$message.success('图片上传成功')
                                _this.previewImgUrl = '' //上传成功清除预览图片
                                _this.isShowPreviewImg = false //上传成功清除预览图片
                                _this.dialogTableVisible = false //关闭弹出框
                                _this.newUpload = false //关闭弹出框
                            }).catch((err)=>{
                                _this.$message.error('上传失败,请重新上传')
                            });
                        }
                    }
                })
            },

            /*
            
            订单弹出框

            */

            //订单
            payOrder(){
                let _this = this;
                _this.$http.get('/orders/'+_this.location+'?include=items',{
                    headers:{
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'Authorization': 'Bearer '+_this.token
                    }
                }).then((res)=>{
                    _this.order = res.data.data
                    _this.getBalance()//请求余额
                    //订单弹出框显示隐藏
                    _this.dialogTableVisible = true
                    _this.checkBtn = false
                    _this.userPay = true;
                }).catch((error)=>{
                    _this.$message.error(error.response.data.message)
                })
            },

            //重新支付
            newPayOrder(id){
                let _this = this;
                _this.$http.get('/orders/'+id+'?include=items',{
                    headers:{
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'Authorization': 'Bearer '+_this.token
                    }
                }).then((res)=>{
                    _this.order = res.data.data
                    _this.getBalance()//请求余额
                    //订单弹出框显示隐藏
                    _this.dialogTableVisible = true
                    _this.checkBtn = false
                    _this.checkPicture = false
                    _this.userPay = true
                }).catch((error)=>{
                    _this.$message.error(error.response.data.message)
                })
            },

            //余额
            getBalance(){
                let _this = this;
                _this.$http.get('/users/'+_this.userId+'/transactions/sum',{
                     headers:{
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'Authorization': 'Bearer '+_this.token
                    }
                }).then((res)=>{
                    _this.sum = res.data.sum;
                })
            },
            
            //去充值
            gotoRecharge(){
                this.$router.push('/index/recharge');
            },

            //支付
            gotoPay(orderNo){
                let _this = this;
                let params = new URLSearchParams()
                _this.$http.post('/orders/'+orderNo+'/pay',params,{
                     headers:{
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'Authorization': `Bearer ${_this.token}`
                    }}).then((res)=>{
                    //订单弹出框显示隐藏
                    _this.dialogTableVisible = false
                    _this.$message.success('付款成功')
                   setTimeout(function(){
                        _this.getChainList();//刷新列表
                   },1000)
                }).catch((error)=>{
                    _this.$message.error(error.response.data.message)
                })
            },

        }
    }
</script>

<style scoped lang="stylus">
    tableThColor = #F6F7FC
    blueColor = #1884EC

    .el-table >>> th
        background-color tableThColor
        color #555
        font-weight 400
        text-align center
        padding 8px 0
    .subBtn
        margin-left 10px
        margin-top 20px
        .el-button--primary
            border-color blueColor
            background-color blueColor
        .el-button
            padding 9px 18px
        .el-dialog__body
            width 100%
            text-align center
    .el-table >>> td
        padding 8px 0 0 0
        i
            font-size 17px
            margin-right 5px
        .deleteText, .detailsText
            position relative
            top -4px
        .el-button
            padding 0px
            span
                position relative
                top -2px
        .el-button--small
            padding-top 8px
            padding-bottom 8px
        .el-button.is-circle
            height 23px
            width 23px
            position relative
            top 6px
        .el-button.is-circle >>> .el-icon-check
            position relative
            top -8px
            left -10px
    .upload-demo >>> .el-upload-dragger
        width 760px
        height 220px
        .el-icon-upload
            margin-top 50px
    .upload-demo >>> .el-upload-list
        margin-left -15px !important
    .upload-demo >>> .el-upload-list__item
        width 140px
        float left
        margin-left 15px
    .upload-demo >>> .selectBtn
        position absolute
        bottom 30px
        right 100px
    .uploadBtn
        position absolute
        bottom 66px
        right 50px
    .el-checkbox >>> .el-checkbox__label
        font-weight 400
    .el-dialog__header >>> .el-dialog__headerbtn
        position absolute
        top 0
        right 0
        background-color #D5D5D5
    
    .dialog1
        text-align center
        .dialog1 >>> .el-dialog
            width 772px
        .bigBtn
            background-color #fff
            color blueColor
            width 234px
            height 64px
            font-size 18px
            font-weight 400
        .bigBtn >>> :hover
            color blueColor
        .dialogLeftText
            padding-top 10px
        .layout1
            margin-bottom 20px
        .screenList
            line-height 30px
            width 260px
            margin-top -6px
        .payBox
            .payTitle
                font-size 24px
                font-family MicrosoftYaHei
                font-weight 400
                color rgba(85,85,85,1)
            .payNumber
                font-size 54px
                font-family MicrosoftYaHei
                font-weight 400
                color rgba(85,85,85,1)
                margin-top 30px
            .payTable
                border-collapse collapse
                width 100%
                border 1px solid #eee
                margin-top 39px
                td
                    border 1px solid #eee
                    height: 32px;
                    text-align left
                    padding 0 10px
                .tableLeft
                    text-align right
                span
                    color #ff0000

    .el-input__inner
        height 35px
        line-height 35px
        font-size 14px
        box-shadow none
        border 1px solid #e9e9e9
        width 260px

    .el-input__inner:focus
        border-color blueColor
        box-shadow none
        transition-duration .5s

    .leftImgBox
        img
            width 100%

    .el-button--primary
        border-color #1884EC
        background-color #1884EC

    .el-button
        padding 9px 18px

    .el-dialog__body
        height 400px;
    .el-radio
        font-weight 400px

    .picDialog 
            font-size 14px
        .picDialog  >>> .el-form-item
            margin-bottom 20px
            height 35px
        .picDialog >>> .el-button--primary
            height 35px
            span
                position relative
                top -2px
        .picDialog >>> .el-select
            width 120px
            height 35px
            .el-input__inner
                width 120px
                height 35px
        .picDialog >>> .el-input__inner
            width 200px
        .picDialog >>> .el-input__prefix
            .el-input__icon
                line-height 35px
            .picPage
                text-align left
            .picPage >>> button
                height 20px
                width 20px
                display inline-block
                background #1884EC
        .popTableBorder
                border 1px dashed #cccccc
                padding 20px
                margin-bottom 20px
            .picList
                width 100%
                list-style none
                margin 0px
                li
                    box-sizing border-box
                    width 156px
                    height 186px
                    cursor pointer
                    margin 6px
                    float left
                    img
                        width 156px
                        height 156px
                        border-radius 8px
                    .imgBg
                        width 156px
                        height 156px
                        background #000
                        opacity 0.5
                        border-radius 8px
                        position relative
                        top -186px
                    .imgIcon
                        display inline-block
                        width 40px
                        height 40px
                        position relative
                        top -290px
                        left 60px
                        z-index 999
                    .picTitle
                        display inline-block
                        height 25px
                        width 150px
                        line-height 25px
                        overflow hidden
                        text-overflow ellipsis
                        white-space nowrap
                    .el-button
                        padding 15px
            .uploadBox
                float left
                margin-right 10px
                position relative
                margin-top 20px
                width 100px
                height 100px
                border 1px solid #cccccc
                border-radius 4px
                text-align center
                img
                    height 100%
                .inputFile
                    position absolute
                    left 0
                    top 0
                    width 100px
                    height 100px
                    opacity 0
                    cursor pointer
                    z-index 1
                .addIcon
                    position absolute
                    left 0
                    top 0
                    width 100px
                    height 100px
                    line-height 100px
                    text-align center
                    font-size 60px

       
</style>
